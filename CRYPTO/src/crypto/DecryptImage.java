/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DecryptImage.java
 *
 * Created on 22 Oct, 2013, 4:32:07 PM
 */
package crypto;

import AES.LSLAESCrypto;
import AES.LSLAESCrypto.LSLAESCryptoMode;
import AES.LSLAESCrypto.LSLAESCryptoPad;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author pioneer
 */
public class DecryptImage extends javax.swing.JFrame {

    String mykey="";
    String imgname="";
    /** Creates new form DecryptImage */
    public DecryptImage(String key) {
        initComponents();
        
        mykey=key;
        enc.setText(mykey);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        enc = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Decryption");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Select Stego Image");

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Decrypted Text");

        jButton2.setText("Extract and Decrypt");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Enter Key For Decryption");

        enc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(26, 26, 26))
                                .addComponent(jLabel3))
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addComponent(enc, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jButton2)
                        .addGap(67, 67, 67)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(enc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jButton2)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addGap(80, 80, 80)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

     JFileChooser jf=new JFileChooser();
    jf.showOpenDialog(null);
    imgname=jf.getSelectedFile().getPath();  
    jTextField1.setText(imgname);// TODO add your handling code here:
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
    
    String extractedbinary="";
    int count=0;
     int st=0,end=7;
    String cipher="";
    int width,height;
     try
    {
        
        
        if(enc.getText().equals(""))
        {
        JOptionPane.showMessageDialog(this,"Enter the decryption Key");
            return;
        }
        
        
        int fx=0;
         BufferedImage  image1 = ImageIO.read(new File("F:\\x.png"));        
		//File file= new File("image.jpg");

		//BufferedImage image = ImageIO.read(file);

		int w1=image1.getWidth();
		int h1=image1.getHeight();

                BufferedReader fr=new BufferedReader (new FileReader("full.txt"));
                int  leng=Integer.parseInt(fr.readLine());
		//System.out.println("width="+w);
		//System.out.println("height="+h);
                 
                outer:  for (int row = 0; row < h1 ; row++)
                {
                    for (int col = 0; col < w1; col++)
                    {

//                     Color c = b.GetPixel(col, row);
    
                        int clr=image1.getRGB(row,col);

                        
                      
                        
			int  r = (clr & 0x00ff0000) >> 16; //notation for red
			int  g = (clr & 0x0000ff00) >> 8; //notation for green
			int  b = clr & 0x000000ff;	 //notation for blue 
                       //   System.out.println(g);                       
                        
                        //Convert to binary
                        
                        String binary="";
                        int x=g;
                        
                         for (int i = 0; i < 8; i++) {
                                int digit = 0;
                                
                                digit = x % 2;
                                x = x / 2;
                                binary = digit + binary;
                            }                         
                         //System.out.println(binary);
                         
                         
                            int[] intdata = new int[binary.length()];
                                              
                           for (int k = 0; k < binary.length(); k++) {
                          intdata[k] = Character.digit(binary.charAt(k), 10);
                            }
                           
                           int bit=intdata.length-1;
                           
                           extractedbinary=extractedbinary+intdata[bit];
                           if(count>=leng)
                               break outer;
                           
                           count++;
                   
                           
                           
                           
                           
           
                           
    /* if(count%8==0)
          {
                     
    String bin=extractedbinary.substring(st,end+1);
                    
   int y=7;
   double sum=0;
   int i=0;
   for(int x1=y;x1>=0;x1--)
   {
       sum=sum+Math.pow(2,x1)*Integer.parseInt(bin.charAt(i)+"");
       i++;
       
   }
         
   
    char ch = (char)sum;
    System.out.println(ch);
    cipher=cipher+ch;
    
    
    
    if(cipher.length()%12==0)
    {
    
     String myMsg1 =cipher;
                 
               //  System.out.println(myMsg1);
                   
                 String enk=jTextField3.getText();
                   
                  DESDecrypter d1=new DESDecrypter(enk);
                  //Convert binary to char
                  
                  String ans=d1.decrypt(myMsg1);
                  if(ans!=null)
                  {
                  System.out.println(ans);
                  
                  if(ans.contains("*"))
                     break outer;
                  }
    }
    
              st=end+1;
              end =st+7;
    
                }                                  
          */
                                  
                                }
                            }//for end
                
                
                int h=count/8;
                
                for(int k=0;k<h;k++)
                {
                                         
    String bin=extractedbinary.substring(st,end+1);
                    
   int y=7;
   double sum=0;
   int i=0;
   for(int x1=y;x1>=0;x1--)
   {
       sum=sum+Math.pow(2,x1)*Integer.parseInt(bin.charAt(i)+"");
       i++;
       
   }
         
   
    char ch = (char)sum;
    System.out.print(ch);
    cipher=cipher+ch;
      st=end+1;
       end =st+7;
                    
                }
                
                
                
                
                
                
    }
     catch(Exception ee)
     {
         
     }
                                 
                 
                     
                 // System.out.println(extractedbinary);
                
	         String myMsg1 =cipher;
                 
            //     System.out.println(myMsg1);
                   String enk=enc.getText();
                  
                   
                    try {
          final String myKey =  enc.getText();//"1234567890ABCDEF0123456789ABCDEF";  //32
    				final String myIV = "89ABCDEF0123456789ABCDEF01234567";

    		 
    				final LSLAESCrypto aes = new LSLAESCrypto(LSLAESCryptoMode.CFB,LSLAESCryptoPad.NONE,128,myKey,myIV);
                                String g=aes.decrypt(cipher);
    				 
                                System.out.println(g);
                                jTextField2.setText(g);
                     
      
        } catch (Exception ex) {
            Logger.getLogger(CharacterSet.class.getName()).log(Level.SEVERE, null, ex);
        }
                   
                //DESDecrypter d1=new DESDecrypter(enk);
                  //Convert binary to char                  
                //  String ans=d1.decrypt(myMsg1);
                  //System.out.println(ans);
                  
                //  jTextField2.setText(ans);
                // jLabel3.setText(d1.decrypt(myMsg1));
    
    
    
}//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DecryptImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DecryptImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DecryptImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DecryptImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
               // new DecryptImage().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel enc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
