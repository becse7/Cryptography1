/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImageStego.java
 *
 * Created on 22 Aug, 2013, 1:19:25 PM
 */
package crypto;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.math.BigInteger;
import java.nio.ByteBuffer;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;



/**
 *
 * @author pioneer
 */
public class ImageStego extends javax.swing.JFrame {

    FileWriter fw;
    
    String myKey="",enctext="";
        String textbinary="",fullbinary="";;
        int counter=0;
    String imgname="";
    BufferedImage img;
    /** Creates new form ImageStego */
    public ImageStego(String labelkey,String labelenc) {
        
        this.myKey=labelkey;
        this.enctext=labelenc;
        
        
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        key = new javax.swing.JLabel();
        enc = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Select the Cover Image ");

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setPreferredSize(new java.awt.Dimension(200, 200));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 198, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 246, Short.MAX_VALUE)
        );

        jLabel2.setText(" Encryption Key");

        jLabel3.setText("Encrypted Text To Embed");

        jButton3.setText("EMBED");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        key.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        enc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel3)
                                .addGap(29, 29, 29)
                                .addComponent(enc, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jButton3))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(enc, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)))
                .addGap(73, 73, 73))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    JFileChooser jf=new JFileChooser();
    jf.showOpenDialog(null);
    imgname=jf.getSelectedFile().getPath();  
    jTextField1.setText(imgname);
    Graphics g=jPanel2.getGraphics();
        try {
             img=ImageIO.read(new File(imgname));        
             g.drawImage(img, 0, 0, null);
             fw=new FileWriter("full.txt");
    } catch (IOException ex) {
         System.out.println(ex);
        }
    
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:    
    
     try
    {
        int fx=0;
         BufferedImage   image = ImageIO.read(new File(imgname));
         int width=image.getWidth();
         int height=image.getHeight();

             BufferedImage  imgtemp = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
                           Graphics2D gra = imgtemp.createGraphics();
                          gra.setColor(Color.WHITE);
                          gra.setBackground(Color.WHITE);
                          gra.fillRect(0,0,width,height);
                           gra.dispose();

                    // set to TYPE_INT_ARGB to support transparency
                           
                           String filename ="F:\\x.png";
                    
                            File f=new File(filename);
                            
                           ImageIO.write(imgtemp,"png",f);	
                          
                            BufferedImage nn=ImageIO.read(f);
         
         
         

		int w=image.getWidth();
		int h=image.getHeight();

                
                
                for(int j=0;j<enctext.length();j++)
      {
          int x=(int)enctext.charAt(j);
          
             for (int i = 0; i < 8; i++) {
                 
                                int digit = 0;
                                
                                digit = x % 2;
                                x = x / 2;
                                textbinary = digit + textbinary;
                            }
             
             fullbinary=fullbinary+textbinary;
             
             textbinary="";
             
             
                         
      }
      
     System.out.println(textbinary);
     try
     {
     int sz=fullbinary.length();
     fw.write(sz+"");
     fw.flush();
     fw.close();
     }
     catch(Exception e)
     {
         
     }

		//System.out.println("width="+w);
		//System.out.println("height="+h);
                 
                outer:  for (int row = 0; row < w ; row++)
                {
                    for (int col = 0; col < h; col++)
                    {

//                     Color c = b.GetPixel(col, row);
    
                        int clr=  image.getRGB(row,col);

			int  r = (clr & 0x00ff0000) >> 16; //notation for red
			int  g = (clr & 0x0000ff00) >> 8; //notation for green
			int  b = clr & 0x000000ff;	 //notation for blue                        
                        
                        //Convert to binary
                        
                       
                    
                       
                         if(counter<fullbinary.length())
                         {
                             
                                 
                        String binary="";
                        
                        int x=g;
                        
                         for (int i = 0; i < 8; i++) {
                                int digit = 0;                                
                                digit = x % 2;
                                x = x / 2;
                                binary = digit + binary;
                            }                         
                         //System.out.println(binary);
                         
                         
                            int[] intdata = new int[binary.length()];
                                              
                           for (int k = 0; k < binary.length(); k++) {
                          intdata[k] = Character.digit(binary.charAt(k), 10);
                            }
                         
                          int bit=intdata.length-1;
                             
                          int replace=Character.digit(fullbinary.charAt(counter), 10);
                          intdata[bit]=(replace);                           
                            
                           int y=7;
                           int sum=0;
                           int k=0;
                           
                           for(int x1=y;x1>=0;x1--)
                           {
                            sum=sum+(int)Math.pow(2,x1)*intdata[k];
                            k++;
                           }                                                   
                       
                           
                           Color newcolor=new Color(r,sum,b);                           
                           int dc=newcolor.getRGB();                      
                                                     
                        //   System.out.println(row+"  "+col+"  "+sum);
                         //  System.out.println(counter+"  "+fullbinary.length()+"  "+nn.getWidth());
                           counter++;                          
                           
                           nn.setRGB(row, col, dc);
                        //   System.out.println(nn.getRGB(row, col));
                           
                           
                             
                         }
                         else
                         {
                             nn.setRGB(row, col, clr);
                         //  System.out.println(row+"  "+col+"  "+clr);
                             
                         //    System.out.println(nn.getRGB(row, col));
                             
                        //     break outer;
                         }
                             
             
             
                    }
                }
              ImageIO.write(nn,"png",f);
             
    }
     catch(Exception e)
     {
         
         System.out.println(e);
     }
}//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImageStego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImageStego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImageStego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageStego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                //new ImageStego().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel enc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel key;
    // End of variables declaration//GEN-END:variables
}
